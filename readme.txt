# Solana Trading Bot

Бот для автоматической торговли токенами в сети Solana на основе процента миграции. Бот отслеживает токены на платформах pump.fun и Raydium, и автоматически покупает токены, у которых процент миграции достигает 98% или выше. После покупки бот автоматически продает токен с заданной прибылью.

## Особенности

- Мониторинг токенов на pump.fun и Raydium
- Автоматическая покупка токенов при достижении порога миграции 98%
- Автоматическая продажа токенов с заданной прибылью
- Управление пользователями с разными ролями (админ, пользователь)
- Создание уникальных кошельков Solana для каждого пользователя
- Уведомления о сделках через Telegram
- Поддержка русского и узбекского языков
- Веб-интерфейс для администрирования

## Требования

- Python 3.8 или выше
- MongoDB
- Доступ к сети Solana (RPC URL)
- Telegram Bot Token

## Установка

1. Клонируйте репозиторий:

```bash
git clone https://github.com/yourusername/solana-trading-bot.git
cd solana-trading-bot
```

2. Создайте виртуальное окружение и установите зависимости:

```bash
python -m venv venv
source venv/bin/activate  # Для Linux/Mac
# или
venv\Scripts\activate  # Для Windows

pip install -r requirements.txt
```

3. Создайте файл `.env` с настройками:

```bash
cp .env.example .env
```

4. Отредактируйте файл `.env`, указав свои значения:
   - `MONGODB_URI` - URI для подключения к MongoDB
   - `TELEGRAM_BOT_TOKEN` - токен вашего Telegram бота
   - `SOLANA_RPC_URL` - URL для подключения к ноде Solana
   - `ADMIN_USERNAME` и `ADMIN_PASSWORD` - учетные данные администратора
   - Другие настройки по необходимости

## Запуск

Для запуска бота выполните:

```bash
python main.py
```

Сервер будет запущен на порту, указанном в `.env` (по умолчанию 5000).

## Использование

### Через браузер

Откройте `http://localhost:5000` в браузере, чтобы убедиться, что сервер работает.

### Через Telegram

1. Найдите своего бота в Telegram по имени, которое вы указали при создании.
2. Отправьте команду `/start` для начала работы.
3. Используйте команды:
   - `/start` - Показать приветственное сообщение
   - `/balance` - Проверить баланс кошелька
   - `/stats` - Показать статистику торговли

### Через Postman или подобный инструмент

#### Вход администратора:
- URL: `http://localhost:5000/api/auth/login`
- Метод: POST
- Тело запроса:
  ```json
  {
    "username": "admin",
    "password": "ваш_пароль_администратора"
  }
  ```

#### Создание нового пользователя:
- URL: `http://localhost:5000/api/users/create`
- Метод: POST
- Тело запроса:
  ```json
  {
    "username": "admin",
    "password": "пароль_администратора",
    "newUsername": "новый_пользователь",
    "newPassword": "пароль_нового_пользователя",
    "telegramChatId": "идентификатор_чата_телеграм",
    "language": "ru"
  }
  ```

## Настройка Telegram бота

1. Создайте нового бота через [@BotFather](https://t.me/BotFather) в Telegram.
2. Получите токен и укажите его в `.env` файле.
3. Для получения chat_id, отправьте сообщение своему боту и затем выполните запрос:
   `https://api.telegram.org/botYOUR_BOT_TOKEN/getUpdates`

## Структура проекта

- `app.py` - Основной файл Flask приложения
- `main.py` - Точка входа для запуска всех компонентов
- `models.py` - Модели данных для взаимодействия с MongoDB
- `solana_service.py` - Сервис для работы с Solana блокчейном
- `telegram_service.py` - Сервис для работы с Telegram ботом
- `token_monitor.py` - Сервис для мониторинга токенов

